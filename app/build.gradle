/*
 * Copyright Â© 2015 TIBCO Software, Inc. All rights reserved.
 * http://community.jaspersoft.com/project/jaspermobile-android
 *
 * Unless you have purchased a commercial license agreement from Jaspersoft,
 * the following license terms apply:
 *
 * This program is part of TIBCO Jaspersoft Mobile for Android.
 *
 * TIBCO Jaspersoft Mobile is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * TIBCO Jaspersoft Mobile is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with TIBCO Jaspersoft Mobile for Android. If not, see
 * <http://www.gnu.org/licenses/lgpl>.
 */

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:" + androidToolsBuildGradle
        classpath "com.neenbedankt.gradle.plugins:android-apt:" + androidApt
        classpath 'io.fabric.tools:gradle:1.19.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'io.fabric'
apply from: 'build_utils.gradle'
apply from: 'resources.gradle'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId PACKAGE_NAME
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion

        versionCode 2_03_00_000
        versionName "2.3.0"

        if (project.hasProperty('GOOGLE_ANALYTICS_TRACKING_ID')) {
            resValue "string", "google_analytics_tracking_id", GOOGLE_ANALYTICS_TRACKING_ID
        } else {
            resValue "string", "google_analytics_tracking_id", "SET_YOUR_ANALYTIC_TRACKING_ID"
        }

        if (project.hasProperty('PASSWORD_SALT_KEY')) {
            resValue "string", "password_salt_key", PASSWORD_SALT_KEY
        } else {
            resValue "string", "password_salt_key", "salt"
        }
    }
    if (project.hasProperty('JMA_STORE_FILE')) {
        signingConfigs {
            release {
                storeFile file(JMA_STORE_FILE)
                storePassword JMA_STORE_PASSWORD
                keyAlias JMA_KEY_ALIAS
                keyPassword JMA_KEY_PASSWORD
            }
        }

        buildTypes {
            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), "proguard.cfg"
                signingConfig signingConfigs.release
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'asm-license.txt'
        exclude 'NOTICE'
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        lintConfig file("lint.xml")
    }

    sourceSets.main {
        // src/gen is the target for generated content like json model
        java.srcDirs += 'build/generated/source/db'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
        encoding 'ISO-8859-1'
    }

    productFlavors {
        dev {
            ext.enableCrashlytics = false
        }
        production {
            // If you new Crashlytics enabled, please, setup constant 'CRASHLYTICS_API_KEY' in gradle.properties
            // with valid API key Crashlytics provides.
            if (project.hasProperty('CRASHLYTICS_API_KEY')) {
                manifestPlaceholders = [crashlyticsApiKey: CRASHLYTICS_API_KEY]
            } else {
                // If API key wasn't applied we disable io.fabric validation steps during build process.
                // ATTENTION: App will crash silently due to missing API key. If you don't need Crashlytics
                // remove setup in AppConfiguratorImpl for production flavor
                manifestPlaceholders = [crashlyticsApiKey: ""]
                ext.enableCrashlytics = false
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    android.variantFilter { variant ->
        if (variant.buildType.name.equals('debug') && variant.getFlavors().get(0).name.equals('production')) {
            variant.setIgnore(true);
        }
    }

    apt {
        arguments {
            androidManifestFile variant.outputs[0].processResources.manifestFile
            resourcePackageName PACKAGE_NAME
            guiceAnnotationDatabasePackageName "com.jaspersoft.android.jaspermobile"
            logLevel "WARN"
        }
    }

    dependencies {
        provided project(':database-generator')
        compile project(':sdk')

        compile 'org.roboguice:roboguice:3.0.1'
        provided 'org.roboguice:roboblender:3.0.1'

        compile 'com.android.support:appcompat-v7:23.0.1'
        compile 'com.android.support:cardview-v7:23.0.1'
        compile 'com.android.support:recyclerview-v7:23.0.1'
        compile 'com.android.support:design:23.0.1'
        compile 'com.google.android.gms:play-services-analytics:7.3.0'

        compile("org.androidannotations:androidannotations-api:3.2")
        apt "org.androidannotations:androidannotations:3.2"
        apt 'org.roboguice:roboblender:3.0.1'

        compile('com.crashlytics.sdk.android:crashlytics:2.2.1@aar') {
            transitive = true;
        }

        // Remove gradle dependency
        // When all required testing for JRS will be completed
        compile 'com.google.code.gson:gson:2.3'

        // Dependency for image loading management
        compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'

        // Template rendering
        compile 'com.samskivert:jmustache:1.10'

        // Unit tests dependencies
        testCompile 'junit:junit:4.12'
        // JunitParams
        testCompile('pl.pragmatists:JUnitParams:1.0.4') {
            exclude group: 'org.hamcrest'
        }
        testCompile 'com.squareup.retrofit:retrofit-mock:1.8.0'
        testCompile 'org.mockito:mockito-core:1.9.5'
        testCompile('org.robolectric:shadows-support-v4:3.0') {
            exclude group: 'commons-logging', module: 'commons-logging'
            exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        }
    }
}