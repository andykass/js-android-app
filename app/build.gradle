/*
 * Copyright Â© 2014 TIBCO Software, Inc. All rights reserved.
 *  http://community.jaspersoft.com/project/jaspermobile-android
 *
 *  Unless you have purchased a commercial license agreement from Jaspersoft,
 *  the following license terms apply:
 *
 *  This program is part of Jaspersoft Mobile for Android.
 *
 *  Jaspersoft Mobile is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Jaspersoft Mobile is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with Jaspersoft Mobile for Android. If not, see
 *  <http://www.gnu.org/licenses/lgpl>.
 */

buildscript {
    dependencies {
        classpath "com.android.tools.build:gradle:" + androidToolsBuildGradle
        classpath "com.neenbedankt.gradle.plugins:android-apt:" + androidApt
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:0.10.1-SNAPSHOT'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'hugo'
apply plugin: 'android-apt'
apply from: 'build_utils.gradle'

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId PACKAGE_NAME
        testApplicationId TEST_PACKAGE_NAME
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 15020000
        versionName generateVersionName()
        testInstrumentationRunner INSTRUMENTATION_RUNNER
    }

    if (project.hasProperty('JMA_STORE_FILE')) {
        signingConfigs {
            release {
                storeFile file(JMA_STORE_FILE)
                storePassword JMA_STORE_PASSWORD
                keyAlias JMA_KEY_ALIAS
                keyPassword JMA_KEY_PASSWORD
            }
        }

        buildTypes {
            release {
                runProguard true
                proguardFile "proguard.cfg"
                proguardFile getDefaultProguardFile('proguard-android.txt')
                signingConfig signingConfigs.release
            }
        }
    }


    buildTypes {
        debug {
            testCoverageEnabled = false
        }
        release {
            runProguard true
            proguardFile "proguard.cfg"
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'asm-license.txt'
        exclude 'NOTICE'
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

//    lintOptions {
//        lintConfig file("lint.xml")
//    }

    lintOptions {
        checkReleaseBuilds false
    }

    applicationVariants.all { variant ->
        renameApk(variant)
        variant.assemble.doLast {
            removeUnaligned(variant)
        }
    }

    sourceSets.main {
        // src/gen is the target for generated content like json model
        java.srcDirs += 'build/generated/source/db'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

apt {
    arguments {
        androidManifestFile variant.processResources.manifestFile
        resourcePackageName PACKAGE_NAME
    }
}


dependencies {
    compile project(':database-generator')
    compile project(':library-circular')
    compile project(':library-holoaccent')

    compile 'com.jaspersoft.android.sdk:js-android-sdk-client:2.0-SNAPSHOT'
    compile 'com.jaspersoft.android.sdk:js-android-sdk-ui:2.0-SNAPSHOT'
    compile 'org.roboguice:roboguice:2.0'
    compile 'com.google.guava:guava:18.0'
    compile('com.android.support:support-v4:20.0.0') {
        exclude group: 'com.android.support'
    }
    // This is required for @Nullable @NonNull annotations
    compile 'com.android.support:support-annotations:20.0.0'
    // For sugar instantiate of dialogs
    compile('eu.inmite.android.lib:android-styled-dialogs:1.2.0:') {
        exclude group: 'com.android.support'
    }

    compile("org.androidannotations:androidannotations-api:${androidAnnotationsVersion}")
    apt "org.androidannotations:androidannotations:${androidAnnotationsVersion}"

    // For action mode support within list views
    compile 'com.github.manuelpeinado.multichoiceadapter:multichoiceadapter:3.1.0'
    // For homogeneous design on all platforms
    // Will use local dependency because for Android L there is no proper support.
//    compile 'com.negusoft.holoaccent:library:1.0.1'

    // Splunk Mint(Bugsense)
    compile "com.splunk.mint:mint:4.0.3"

    // Remove gradle dependency
    // When all required testing for JRS will be completed
    compile 'com.google.code.gson:gson:1.7.2'

    androidTestCompile('com.jakewharton.espresso:espresso:1.1-r3') {
        exclude group: 'com.google.guava'
    }
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.0'
    androidTestCompile('org.mockito:mockito-core:1.9.5') {
        exclude group: "org.hamcrest"
    }
    androidTestCompile('com.google.dexmaker:dexmaker:1.0') {
        exclude group: "org.mockito"
    }
    androidTestCompile('com.google.dexmaker:dexmaker-mockito:1.0') {
        exclude group: "org.mockito"
    }
}